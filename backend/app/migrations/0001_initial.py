# Generated by Django 5.1.3 on 2025-09-01 14:53

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Disease",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("scientific_name", models.CharField(blank=True, max_length=200)),
                ("description", models.TextField()),
                ("affected_crops", models.JSONField()),
                ("severity_levels", models.JSONField(default=dict)),
                ("symptoms", models.JSONField(default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Disease",
                "verbose_name_plural": "Diseases",
            },
        ),
        migrations.CreateModel(
            name="PreventionStrategy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("strategy_type", models.CharField(max_length=50)),
                ("implementation_steps", models.JSONField(default=list)),
                ("expected_benefits", models.TextField()),
                (
                    "difficulty_level",
                    models.CharField(
                        choices=[
                            ("easy", "Easy"),
                            ("moderate", "Moderate"),
                            ("difficult", "Difficult"),
                        ],
                        default="moderate",
                        max_length=20,
                    ),
                ),
                (
                    "cost_impact",
                    models.CharField(
                        choices=[
                            ("low", "Low Cost"),
                            ("medium", "Medium Cost"),
                            ("high", "High Cost"),
                        ],
                        default="low",
                        max_length=20,
                    ),
                ),
                (
                    "disease",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preventions",
                        to="app.disease",
                    ),
                ),
            ],
            options={
                "verbose_name": "Prevention Strategy",
                "verbose_name_plural": "Prevention Strategies",
            },
        ),
        migrations.CreateModel(
            name="Treatment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "treatment_type",
                    models.CharField(
                        choices=[
                            ("chemical", "Chemical"),
                            ("organic", "Organic"),
                            ("biological", "Biological"),
                            ("cultural", "Cultural"),
                            ("preventive", "Preventive"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "effectiveness_rating",
                    models.IntegerField(
                        default=3,
                        help_text="Effectiveness rating from 1-5",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("application_method", models.TextField()),
                ("safety_precautions", models.TextField(blank=True)),
                (
                    "cost_estimate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Estimated cost per application",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "duration_days",
                    models.IntegerField(
                        blank=True,
                        help_text="How long the treatment takes to show results",
                        null=True,
                    ),
                ),
                (
                    "regional_availability",
                    models.JSONField(
                        default=dict, help_text="Availability by region/country"
                    ),
                ),
                ("is_recommended", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "disease",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="treatments",
                        to="app.disease",
                    ),
                ),
            ],
            options={
                "verbose_name": "Treatment",
                "verbose_name_plural": "Treatments",
                "ordering": ["-effectiveness_rating", "cost_estimate"],
            },
        ),
        migrations.CreateModel(
            name="TreatmentFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_rating",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                (
                    "effectiveness_observed",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("comments", models.TextField(blank=True)),
                ("farmer_location", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "treatment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback",
                        to="app.treatment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Treatment Feedback",
                "verbose_name_plural": "Treatment Feedback",
            },
        ),
    ]
