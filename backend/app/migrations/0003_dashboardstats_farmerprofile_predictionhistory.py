# Generated by Django 5.1.3 on 2025-09-05 16:35

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("app", "0002_alter_disease_options_disease_biological_control_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DashboardStats",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(unique=True)),
                ("total_predictions", models.IntegerField(default=0)),
                (
                    "disease_counts",
                    models.JSONField(
                        default=dict, help_text="Count of each disease detected"
                    ),
                ),
                (
                    "crop_distribution",
                    models.JSONField(
                        default=dict, help_text="Distribution of crops analyzed"
                    ),
                ),
                (
                    "region_stats",
                    models.JSONField(default=dict, help_text="Statistics by region"),
                ),
                (
                    "treatment_effectiveness",
                    models.JSONField(
                        default=dict,
                        help_text="Average treatment effectiveness ratings",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Dashboard Statistics",
                "verbose_name_plural": "Dashboard Statistics",
                "ordering": ["-date"],
            },
        ),
        migrations.CreateModel(
            name="FarmerProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("farm_name", models.CharField(blank=True, max_length=200)),
                ("location", models.CharField(blank=True, max_length=200)),
                (
                    "farm_size",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Farm size in acres/hectares",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "primary_crops",
                    models.JSONField(
                        default=list, help_text="List of primary crops grown"
                    ),
                ),
                ("experience_years", models.IntegerField(blank=True, null=True)),
                ("contact_number", models.CharField(blank=True, max_length=20)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="farmer_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Farmer Profile",
                "verbose_name_plural": "Farmer Profiles",
            },
        ),
        migrations.CreateModel(
            name="PredictionHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "confidence_score",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                ("image_path", models.CharField(blank=True, max_length=500)),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        help_text="Location where prediction was made",
                        max_length=200,
                    ),
                ),
                ("crop_type", models.CharField(blank=True, max_length=100)),
                (
                    "weather_conditions",
                    models.JSONField(
                        default=dict, help_text="Weather data at time of prediction"
                    ),
                ),
                (
                    "treatment_effectiveness",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "disease",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="predictions",
                        to="app.disease",
                    ),
                ),
                (
                    "treatment_applied",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="app.treatment",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="predictions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Prediction History",
                "verbose_name_plural": "Prediction Histories",
                "ordering": ["-created_at"],
            },
        ),
    ]
