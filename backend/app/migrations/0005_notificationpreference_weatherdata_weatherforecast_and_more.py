# Generated by Django 5.1.3 on 2025-09-06 09:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("app", "0004_mandilocation_marketplaceproduct_productinquiry_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("weather_alerts", models.BooleanField(default=True)),
                ("extreme_weather_warnings", models.BooleanField(default=True)),
                ("disease_risk_alerts", models.BooleanField(default=True)),
                ("disease_detection_alerts", models.BooleanField(default=True)),
                ("treatment_reminders", models.BooleanField(default=True)),
                ("market_price_alerts", models.BooleanField(default=False)),
                ("product_availability_alerts", models.BooleanField(default=False)),
                ("system_updates", models.BooleanField(default=True)),
                ("security_alerts", models.BooleanField(default=True)),
                ("email_notifications", models.BooleanField(default=True)),
                ("push_notifications", models.BooleanField(default=True)),
                ("sms_notifications", models.BooleanField(default=False)),
                ("quiet_hours_start", models.TimeField(blank=True, null=True)),
                ("quiet_hours_end", models.TimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification Preference",
                "verbose_name_plural": "Notification Preferences",
            },
        ),
        migrations.CreateModel(
            name="WeatherData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("location", models.CharField(max_length=200)),
                ("latitude", models.DecimalField(decimal_places=8, max_digits=10)),
                ("longitude", models.DecimalField(decimal_places=8, max_digits=11)),
                (
                    "temperature",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Temperature in Celsius",
                        max_digits=5,
                    ),
                ),
                ("humidity", models.IntegerField(help_text="Humidity percentage")),
                ("pressure", models.IntegerField(help_text="Pressure in hPa")),
                (
                    "wind_speed",
                    models.DecimalField(
                        decimal_places=2, help_text="Wind speed in m/s", max_digits=5
                    ),
                ),
                (
                    "wind_direction",
                    models.IntegerField(help_text="Wind direction in degrees"),
                ),
                ("weather_condition", models.CharField(max_length=100)),
                ("weather_description", models.CharField(max_length=200)),
                ("weather_icon", models.CharField(max_length=10)),
                (
                    "visibility",
                    models.IntegerField(
                        blank=True, help_text="Visibility in meters", null=True
                    ),
                ),
                (
                    "uv_index",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                (
                    "dew_point",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("recorded_at", models.DateTimeField(auto_now_add=True)),
                ("last_updated", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Weather Data",
                "verbose_name_plural": "Weather Data",
                "ordering": ["-recorded_at"],
                "indexes": [
                    models.Index(
                        fields=["location", "-recorded_at"],
                        name="app_weather_locatio_aefca2_idx",
                    ),
                    models.Index(
                        fields=["latitude", "longitude"],
                        name="app_weather_latitud_9b7606_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="WeatherForecast",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("location", models.CharField(max_length=200)),
                ("latitude", models.DecimalField(decimal_places=8, max_digits=10)),
                ("longitude", models.DecimalField(decimal_places=8, max_digits=11)),
                ("forecast_date", models.DateField()),
                ("forecast_time", models.TimeField()),
                ("temperature", models.DecimalField(decimal_places=2, max_digits=5)),
                (
                    "temperature_min",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "temperature_max",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("humidity", models.IntegerField()),
                ("pressure", models.IntegerField()),
                ("wind_speed", models.DecimalField(decimal_places=2, max_digits=5)),
                ("wind_direction", models.IntegerField()),
                ("weather_condition", models.CharField(max_length=100)),
                ("weather_description", models.CharField(max_length=200)),
                ("weather_icon", models.CharField(max_length=10)),
                (
                    "precipitation_probability",
                    models.IntegerField(
                        default=0, help_text="Probability of precipitation %"
                    ),
                ),
                (
                    "precipitation_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Precipitation amount in mm",
                        max_digits=5,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Weather Forecast",
                "verbose_name_plural": "Weather Forecasts",
                "ordering": ["forecast_date", "forecast_time"],
                "indexes": [
                    models.Index(
                        fields=["location", "forecast_date"],
                        name="app_weather_locatio_ee200f_idx",
                    ),
                    models.Index(
                        fields=["latitude", "longitude", "forecast_date"],
                        name="app_weather_latitud_1af4ae_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("message", models.TextField()),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("weather", "Weather Alert"),
                            ("disease", "Disease Alert"),
                            ("market", "Market Alert"),
                            ("treatment", "Treatment Reminder"),
                            ("system", "System Notification"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "data",
                    models.JSONField(
                        default=dict, help_text="Additional notification data"
                    ),
                ),
                ("is_read", models.BooleanField(default=False)),
                ("is_sent", models.BooleanField(default=False)),
                ("scheduled_at", models.DateTimeField(blank=True, null=True)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notification",
                "verbose_name_plural": "Notifications",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "-created_at"],
                        name="app_notific_user_id_1ee635_idx",
                    ),
                    models.Index(
                        fields=["notification_type", "is_read"],
                        name="app_notific_notific_d3e06b_idx",
                    ),
                    models.Index(
                        fields=["scheduled_at"], name="app_notific_schedul_8ea41c_idx"
                    ),
                ],
            },
        ),
    ]
